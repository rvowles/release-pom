<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.bluetrainsoftware.maven.releasepom</groupId>
  <artifactId>excludes-test</artifactId>
  <version>testing</version>
  <packaging>jar</packaging>

  <description>simple description</description>
  <name>simple name</name>
  <properties>
    <one>1</one>
    <two>2</two>
  </properties>

  <dependencies>
    <dependency>
      <!--<groupId>org.springframework.hateoas</groupId>-->
      <!--<artifactId>spring-hateoas</artifactId>-->
      <!--<version>0.3.0.RELEASE</version>-->
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>3.1.2.RELEASE</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>com.bluetrainsoftware.maven</groupId>
        <artifactId>release-pom</artifactId>
        <version>@project.version@</version>
          <executions>
          <execution>
              <id>generate-dep-list</id>
              <!--
                Although these could be considered generated resources
                they are not used within the project they only make sense in the
                final package, hence package phase.
              -->
              <!--
                And you don't want to regenerate these files for every goal called
              -->
              <phase>prepare-package</phase>
              <goals>
                  <goal>release-pom</goal>
              </goals>
              <configuration>
                  <outputFile>${project.build.outputDirectory}/released-pom.xml</outputFile>
              </configuration>
          </execution>
        </executions>
        <configuration>
            <outputFile>my.file.pom</outputFile>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
